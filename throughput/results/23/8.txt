BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'FRANCE' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'LARGE PLATED BRASS'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1731876.76..1731878.58 rows=729 width=38) (actual time=10717.525..10717.526 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1787502 read=230065 dirtied=279 written=108
   ->  HashAggregate  (cost=1731829.34..1731842.10 rows=729 width=38) (actual time=10717.466..10717.467 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1787499 read=230065 dirtied=279 written=108
         ->  Hash Join  (cost=39449.71..1731340.40 rows=24447 width=38) (actual time=888.895..10677.238 rows=24158 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1787499 read=230065 dirtied=279 written=108
               ->  Nested Loop  (cost=39448.15..1730880.46 rows=24447 width=16) (actual time=888.820..10641.267 rows=24158 loops=1)
                     Buffers: shared hit=1787495 read=230065 dirtied=279 written=108
                     ->  Hash Join  (cost=39447.86..1722992.32 rows=24447 width=16) (actual time=888.796..10431.999 rows=24158 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1714880 read=230065 dirtied=279 written=108
                           ->  Nested Loop  (cost=417.17..1683258.79 rows=122235 width=20) (actual time=7.109..9470.232 rows=121182 loops=1)
                                 Buffers: shared hit=1574605 read=224164 dirtied=279 written=105
                                 ->  Nested Loop  (cost=416.74..1485578.55 rows=403717 width=16) (actual time=7.065..4814.226 rows=401801 loops=1)
                                       Buffers: shared hit=284303 read=186553 dirtied=215 written=84
                                       ->  Bitmap Heap Scan on part  (cost=412.02..28159.98 rows=13367 width=4) (actual time=6.952..144.822 rows=13404 loops=1)
                                             Recheck Cond: ((p_type)::text = 'LARGE PLATED BRASS'::text)
                                             Heap Blocks: exact=11418
                                             Buffers: shared hit=4523 read=6965 written=4
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.68 rows=13367 width=0) (actual time=4.701..4.701 rows=13404 loops=1)
                                                   Index Cond: ((p_type)::text = 'LARGE PLATED BRASS'::text)
                                                   Buffers: shared read=70
                                       ->  Bitmap Heap Scan on lineitem  (cost=4.72..108.72 rows=31 width=20) (actual time=0.044..0.337 rows=30 loops=13404)
                                             Recheck Cond: (l_partkey = part.p_partkey)
                                             Heap Blocks: exact=403691
                                             Buffers: shared hit=279780 read=179588 dirtied=215 written=80
                                             ->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_l_shipmode_idx  (cost=0.00..4.71 rows=31 width=0) (actual time=0.028..0.028 rows=30 loops=13404)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Buffers: shared hit=39500 read=16177 written=9
                                 ->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=401801)
                                       Index Cond: ((o_orderkey = lineitem.l_orderkey) AND (o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Buffers: shared hit=1290302 read=37611 dirtied=64 written=21
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=878.248..878.248 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=140275 read=5901 written=3
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=20.465..787.763 rows=300963 loops=1)
                                       Buffers: shared hit=140275 read=5901 written=3
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.042..0.069 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.013 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=19.223..146.655 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145336
                                             Buffers: shared hit=140273 read=5901 written=3
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=12.642..12.642 rows=60193 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=6 read=832 written=3
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.007..0.008 rows=1 loops=24158)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=72615
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.020 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.005 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 7.858 ms
 Execution time: 10718.351 ms
(70 rows)

COMMIT;
COMMIT
