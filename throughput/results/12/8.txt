BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'ROMANIA' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'SMALL BRUSHED TIN'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1812022.52..1812024.34 rows=729 width=38) (actual time=11430.344..11430.345 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1730044 read=299867 dirtied=818 written=9522
   ->  HashAggregate  (cost=1811975.10..1811987.85 rows=729 width=38) (actual time=11430.273..11430.274 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1730041 read=299867 dirtied=818 written=9522
         ->  Hash Join  (cost=39471.03..1811460.84 rows=25713 width=38) (actual time=1168.702..11390.702 rows=24520 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1730041 read=299867 dirtied=818 written=9522
               ->  Nested Loop  (cost=39469.47..1810977.16 rows=25713 width=16) (actual time=1168.606..11354.092 rows=24520 loops=1)
                     Buffers: shared hit=1730037 read=299867 dirtied=818 written=9522
                     ->  Hash Join  (cost=39469.18..1802680.53 rows=25713 width=16) (actual time=1168.580..11138.964 rows=24520 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1656359 read=299867 dirtied=818 written=9522
                           ->  Nested Loop  (cost=438.49..1762910.60 rows=128564 width=20) (actual time=7.375..9864.947 rows=122142 loops=1)
                                 Buffers: shared hit=1546289 read=263761 dirtied=818 written=9522
                                 ->  Nested Loop  (cost=438.06..1554996.42 rows=424620 width=16) (actual time=7.192..4901.784 rows=404233 loops=1)
                                       Buffers: shared hit=251438 read=222440 dirtied=818 written=8086
                                       ->  Bitmap Heap Scan on part  (cost=437.49..29008.84 rows=14073 width=4) (actual time=7.103..177.651 rows=13459 loops=1)
                                             Recheck Cond: ((p_type)::text = 'SMALL BRUSHED TIN'::text)
                                             Heap Blocks: exact=11466
                                             Buffers: shared hit=2269 read=9266 written=371
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..433.98 rows=14073 width=0) (actual time=4.739..4.739 rows=13459 loops=1)
                                                   Index Cond: ((p_type)::text = 'SMALL BRUSHED TIN'::text)
                                                   Buffers: shared read=69
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.56..108.12 rows=31 width=20) (actual time=0.031..0.341 rows=30 loops=13459)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=249169 read=213174 dirtied=818 written=7715
                                 ->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=404233)
                                       Index Cond: ((o_orderkey = lineitem.l_orderkey) AND (o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Buffers: shared hit=1294851 read=41321 written=1436
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=1154.410..1154.410 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=110070 read=36106
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=22.667..1038.223 rows=300963 loops=1)
                                       Buffers: shared hit=110070 read=36106
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.074..0.103 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.014 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=20.106..196.267 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145336
                                             Buffers: shared hit=110068 read=36106
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=13.196..13.196 rows=60193 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=6 read=832
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.007..0.008 rows=1 loops=24520)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73678
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.027..0.027 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.006 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 8.680 ms
 Execution time: 11431.592 ms
(66 rows)

COMMIT;
COMMIT
