BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	s_acctbal,
	s_name,
	n_name,
	p_partkey,
	p_mfgr,
	s_address,
	s_phone,
	s_comment
from
	part,
	supplier,
	partsupp,
	nation,
	region
where
	p_partkey = ps_partkey
	and s_suppkey = ps_suppkey
	and p_size = 18
	and p_type like '%NICKEL'
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'EUROPE'
	and ps_supplycost = (
		select
			min(ps_supplycost)
		from
			partsupp,
			supplier,
			nation,
			region
		where
			p_partkey = ps_partkey
			and s_suppkey = ps_suppkey
			and s_nationkey = n_nationkey
			and n_regionkey = r_regionkey
			and r_name = 'EUROPE'
	)
order by
	s_acctbal desc,
	n_name,
	s_name,
	p_partkey
LIMIT 100;
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=808626.53..808626.53 rows=1 width=190) (actual time=11672.258..11672.285 rows=100 loops=1)
   Buffers: shared hit=1551491 read=320145 written=3303
   ->  Sort  (cost=808626.53..808626.53 rows=1 width=190) (actual time=11672.256..11672.272 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         Buffers: shared hit=1551491 read=320145 written=3303
         ->  Merge Join  (cost=381398.14..808626.52 rows=1 width=190) (actual time=8997.815..11666.316 rows=4612 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1571
               Buffers: shared hit=1551483 read=320145 written=3303
               ->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8116 width=30) (actual time=0.090..1242.126 rows=7748 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 18))
                     Rows Removed by Filter: 1992252
                     Buffers: shared hit=10852 read=35889 written=119
               ->  Sort  (cost=381397.71..385392.00 rows=1597715 width=168) (actual time=8997.505..9386.278 rows=1602615 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 474854kB
                     Buffers: shared hit=1389322 read=280104 written=3168
                     ->  Nested Loop  (cost=2.00..216772.52 rows=1597715 width=168) (actual time=0.114..7243.182 rows=1602640 loops=1)
                           Buffers: shared hit=1389322 read=280104 written=3168
                           ->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.061..117.208 rows=20033 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79967
                                 Buffers: shared hit=2181
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                       Filter: (r_name = 'EUROPE'::bpchar)
                                       Rows Removed by Filter: 4
                                       Buffers: shared hit=1
                                 ->  Hash Join  (cost=1.56..4555.56 rows=100000 width=168) (actual time=0.046..100.746 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       Buffers: shared hit=2180
                                       ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=142) (actual time=0.008..38.879 rows=100000 loops=1)
                                             Buffers: shared hit=2179
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.022..0.022 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             Buffers: shared hit=1
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.004..0.008 rows=25 loops=1)
                                                   Buffers: shared hit=1
                           ->  Index Scan using partsupp_ps_suppkey_idx on partsupp  (cost=0.43..9.75 rows=80 width=12) (actual time=0.018..0.332 rows=80 loops=20033)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                                 Buffers: shared hit=1387141 read=280104 written=3168
               SubPlan 1
                 ->  Aggregate  (cost=48.83..48.84 rows=1 width=4) (actual time=0.064..0.064 rows=1 loops=6183)
                       Buffers: shared hit=151309 read=4152 written=16
                       ->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.041..0.062 rows=2 loops=6183)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             Buffers: shared hit=151309 read=4152 written=16
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=6183)
                                   Filter: (r_name = 'EUROPE'::bpchar)
                                   Rows Removed by Filter: 4
                                   Buffers: shared hit=6183
                             ->  Nested Loop  (cost=0.86..47.71 rows=4 width=8) (actual time=0.027..0.058 rows=4 loops=6183)
                                   Buffers: shared hit=145126 read=4152 written=16
                                   ->  Nested Loop  (cost=0.72..47.04 rows=4 width=8) (actual time=0.024..0.048 rows=4 loops=6183)
                                         Buffers: shared hit=95662 read=4152 written=16
                                         ->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.43..13.75 rows=4 width=8) (actual time=0.016..0.018 rows=4 loops=6183)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                               Buffers: shared hit=21368 read=4152 written=16
                                         ->  Index Scan using pk_supplier on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=24732)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                               Buffers: shared hit=74294
                                   ->  Index Scan using pk_nation on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=24732)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                         Buffers: shared hit=49464
 Planning time: 6.192 ms
 Execution time: 11703.366 ms
(68 rows)

COMMIT;
COMMIT
